set showcmd                     " display incomplete commands
"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode
" Off automatic backup
set nobackup
set nowritebackup
set noswapfile
set history=1000                "store lots of :cmdline history
set showmode                    "show current mode down the bottom
set showbreak=
set wrap linebreak nolist
"add some line space for easy reading
set linespace=4
"disable visual bell
set visualbell t_vb=

" use comma as <Leader> key instead of backslash
let mapleader=","
"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use
"tell the term has 256 colors
set t_Co=256
set guifont=CosmicSansNeueMono:h22
set background=dark

colorscheme base16-eighties

" Mapping
nmap <C-s> :w<CR>
nmap <Tab> gt
nmap <S-Tab> gT

" Strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

autocmd FileType python set sts=4 sw=4

"map to ControlP TextMate style finder
let g:ctrlp_map = '<c-t>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " Linux/MacOSX
nnoremap <leader>t :CtrlP<CR>

let g:ragtag_global_maps = 1
let g:neocomplcache_enable_at_startup = 1
let g:airline_powerline_fonts = 1
" let g:syntastic_ruby_exec = '~/.rbenv/shims/ruby'
" let g:syntastic_enable_signs=1

inoremap <c-x><c-]> <c-]>
nmap <Leader>r :NERDTreeToggle<CR>
